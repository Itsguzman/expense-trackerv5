{"version":3,"file":"static/js/488.01e4716f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658","components/AuthForm/AuthForm.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AuthForm_form__N+Fyz\",\"message\":\"AuthForm_message__Le5UP\",\"actionButtons\":\"AuthForm_actionButtons__fPM+K\",\"invalid\":\"AuthForm_invalid__EQpZU\",\"valid\":\"AuthForm_valid__J9A8q\"};","import React, { useState } from 'react';\nimport iconSvg from '../../assets/images/icons.svg';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { logIn, register } from '../../redux/auth/authOperations';\nimport { useAuth } from 'hooks/useAuth';\nimport css from './AuthForm.module.css';\nimport { Link } from 'react-router-dom';\n\nexport const AuthForm = ({\n  fields,\n  buttonText,\n  footerText,\n  footerLink,\n  footerLinkText,\n  isLogin,\n}) => {\n  const { isRefreshing } = useAuth();\n  const [formData, setFormData] = useState({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const [isValid, setIsValid] = useState(null);\n\n  const validatePassword = (e, field) => {\n    setMessage('');\n\n    if (field === 'password' && !isLogin) {\n      const valid = e.target.value.length >= 8;\n      setIsValid(e.target.value.length === 0 ? null : valid);\n      setMessage(\n        valid\n          ? 'Password is secure.'\n          : 'Password must be at least 8 characters long.'\n      );\n    }\n  };\n\n  const handleChange = (e, field) => {\n    setFormData({\n      ...formData,\n      [field]: e.target.value,\n    });\n    validatePassword(e, field);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (isLogin) {\n        await dispatch(logIn(formData)).unwrap();\n      } else {\n        await dispatch(register(formData)).unwrap();\n      }\n    } catch (err) {\n      setIsValid(false);\n\n      if (err.status === 409) {\n        setMessage('Account already exists.');\n      } else if (err.status === 403) {\n        setMessage('Invalid email or password.');\n      } else {\n        setMessage(`${err.message || 'An error has occurred.'}`);\n      }\n      clearPasswordField();\n    }\n  };\n\n  const clearPasswordField = () => {\n    setFormData(prevData => ({\n      ...prevData,\n      password: '',\n    }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      {fields.map((field, index) => (\n        <div key={index} style={{ position: 'relative' }}>\n          <input\n            type={\n              field.type === 'password' && showPassword ? 'text' : field.type\n            }\n            className={\n              field.type === 'password' && isValid !== null\n                ? isValid\n                  ? css.valid\n                  : css.invalid\n                : ''\n            }\n            placeholder={field.placeholder}\n            value={formData[field.name] || ''}\n            onChange={e => handleChange(e, field.name)}\n            id={field.name}\n            required\n          />\n          {field.type === 'password' ? (\n            <>\n              {isLogin ? (\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  onClick={() => setShowPassword(val => !val)}\n                >\n                  <use href={`${iconSvg}#eye${showPassword ? '' : '-off'}`} />\n                </svg>\n              ) : (\n                isValid !== null && (\n                  <svg\n                    width=\"20\"\n                    height=\"20\"\n                    onClick={() => {\n                      if (!isValid) {\n                        clearPasswordField();\n                        setIsValid(null);\n                        setMessage('');\n                      }\n                    }}\n                  >\n                    <use\n                      href={`${iconSvg}#${isValid ? 'valid' : 'invalid'}-icon`}\n                    />\n                  </svg>\n                )\n              )}\n\n              <p\n                className={css.message}\n                style={{ color: isValid ? 'var(--mint-green)' : 'var(--red)' }}\n              >\n                {' '}\n                {message}\n              </p>\n            </>\n          ) : null}\n        </div>\n      ))}\n\n      <div\n        className={css.actionButtons}\n        style={!isLogin ? { marginTop: '71px' } : null}\n      >\n        <button\n          type=\"submit\"\n          className=\"primary-button\"\n          style={{ width: isRefreshing ? '170px' : null }}\n        >\n          {isRefreshing\n            ? isLogin\n              ? 'Signing in...'\n              : 'Signing up...'\n            : buttonText}\n        </button>\n\n        <p>\n          {footerText} <Link to={footerLink}>{footerLinkText}</Link>\n        </p>\n      </div>\n    </form>\n  );\n};\n\nAuthForm.propTypes = {\n  fields: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      placeholder: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  buttonText: PropTypes.string.isRequired,\n  footerText: PropTypes.string.isRequired,\n  footerLink: PropTypes.string.isRequired,\n  footerLinkText: PropTypes.string.isRequired,\n  isLogin: PropTypes.bool.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\"};","import css from './RegisterForm.module.css';\nimport { AuthForm } from '../AuthForm/AuthForm';\n\nexport const RegisterForm = () => {\n  const fields = [\n    { name: 'name', type: 'text', placeholder: 'Name' },\n    { name: 'email', type: 'email', placeholder: 'Email' },\n    { name: 'password', type: 'password', placeholder: 'Password' },\n  ];\n\n  return (\n    <div className={css.container}>\n      <h1>\n        Sign Up\n      </h1>\n      <p>\n        Step into a world of hassle-free expense management! Your journey towards financial mastery begins here.\n      </p>\n       <AuthForm\n        fields={fields}\n        buttonText=\"Sign Up\"\n        footerText=\"Already have an account?\"\n        footerLink=\"/login\"\n        footerLinkText=\"Sign In\"\n        isLogin={false}\n      />\n    </div>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Sign Up</title>\n      </Helmet>\n      <RegisterForm />\n    </HelmetProvider>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["AuthForm","_ref","fields","buttonText","footerText","footerLink","footerLinkText","isLogin","isRefreshing","useAuth","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","showPassword","setShowPassword","_useState5","_useState6","message","setMessage","dispatch","useDispatch","_useState7","_useState8","isValid","setIsValid","handleChange","e","field","_objectSpread","_defineProperty","target","value","valid","length","validatePassword","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","preventDefault","logIn","unwrap","register","t0","status","concat","clearPasswordField","stop","_x","apply","arguments","prevData","password","_jsxs","onSubmit","className","css","children","map","index","style","position","_jsx","type","placeholder","name","onChange","id","required","_Fragment","width","height","onClick","val","href","iconSvg","color","marginTop","Link","to","RegisterForm","HelmetProvider","Helmet"],"sourceRoot":""}